// Mocks generated by Mockito 5.0.17 from annotations
// in skein_rest_client/test/skein_rest_client_test.dart.
// Do not manually edit this file.

import 'package:async/async.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:skein_rest_client/skein_rest_client.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUri_0 extends _i1.Fake implements Uri {}

class _FakeRestClient_1 extends _i1.Fake implements _i2.RestClient {}

class _FakeCancelableOperation_2<T> extends _i1.Fake
    implements _i3.CancelableOperation<T> {}

/// A class which mocks [RestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestClient extends _i1.Mock implements _i2.RestClient {
  MockRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Uri get uri =>
      (super.noSuchMethod(Invocation.getter(#uri), returnValue: _FakeUri_0())
          as Uri);
  @override
  set uri(Uri? _uri) => super.noSuchMethod(Invocation.setter(#uri, _uri),
      returnValueForMissingStub: null);
  @override
  _i2.RestClient decode({_i2.DecoderFunction<dynamic>? withDecoder}) => (super
      .noSuchMethod(Invocation.method(#decode, [], {#withDecoder: withDecoder}),
          returnValue: _FakeRestClient_1()) as _i2.RestClient);
  @override
  _i2.RestClient encode({_i2.EncoderFunction<dynamic>? withEncoder}) => (super
      .noSuchMethod(Invocation.method(#encode, [], {#withEncoder: withEncoder}),
          returnValue: _FakeRestClient_1()) as _i2.RestClient);
  @override
  _i2.RestClient addHeader({String? name, String? value}) =>
      (super.noSuchMethod(
          Invocation.method(#addHeader, [], {#name: name, #value: value}),
          returnValue: _FakeRestClient_1()) as _i2.RestClient);
  @override
  _i2.RestClient authorization(_i2.AuthorizationBuilder? authorization) =>
      (super.noSuchMethod(Invocation.method(#authorization, [authorization]),
          returnValue: _FakeRestClient_1()) as _i2.RestClient);
  @override
  void init(Uri? uri) => super.noSuchMethod(Invocation.method(#init, [uri]),
      returnValueForMissingStub: null);
  @override
  _i3.CancelableOperation<T> post<T>([dynamic data]) =>
      (super.noSuchMethod(Invocation.method(#post, [data]),
              returnValue: _FakeCancelableOperation_2<T>())
          as _i3.CancelableOperation<T>);
  @override
  _i3.CancelableOperation<T> patch<T>([dynamic data]) =>
      (super.noSuchMethod(Invocation.method(#patch, [data]),
              returnValue: _FakeCancelableOperation_2<T>())
          as _i3.CancelableOperation<T>);
  @override
  _i3.CancelableOperation<T> get<T>() =>
      (super.noSuchMethod(Invocation.method(#get, []),
              returnValue: _FakeCancelableOperation_2<T>())
          as _i3.CancelableOperation<T>);
  @override
  _i3.CancelableOperation<T> delete<T>([dynamic data]) =>
      (super.noSuchMethod(Invocation.method(#delete, [data]),
              returnValue: _FakeCancelableOperation_2<T>())
          as _i3.CancelableOperation<T>);
}
